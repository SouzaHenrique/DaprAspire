@page "/"

@using Blazored.LocalStorage
@using DaprAspire.FrontEnd.Services.Auth
@using MudBlazor

@layout LoginLayout

@inject NavigationManager Navigation
@inject AuthService AuthService
@inject ILocalStorageService LocalStorage


<MudPaper Class="d-flex flex-column align-center justify-center mx-auto my-12 pa-8 elevation-6" Style="max-width: 400px;">
    <MudText Typo="Typo.h5" Class="mb-6">Login</MudText>

    <MudTextField @bind-Value="_username" Label="Username" Variant="Variant.Filled" Required="true" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.AccountCircle" Class="mb-4" />

    <MudTextField @bind-Value="_password" Label="Password" Variant="Variant.Filled" InputType="InputType.Password" Required="true" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Lock" Class="mb-4" />

    <MudButton Color="Color.Primary" Variant="Variant.Filled" Class="w-100" OnClick="HandleLogin">Entrar</MudButton>

    <MudText Typo="Typo.caption" Class="mt-4 text-center text-error">@_errorMessage</MudText>
</MudPaper>

@code {
    private string _username = string.Empty;
    private string _password = string.Empty;
    private string _errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        var success = await AuthService.LoginAsync(_username, _password);

        if (success)
            Navigation.NavigateTo("/ledgers");
        else
            _errorMessage = "Usuário ou senha inválidos.";
    }
}
